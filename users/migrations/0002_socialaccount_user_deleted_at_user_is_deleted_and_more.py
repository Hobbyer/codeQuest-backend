# Generated by Django 5.2.7 on 2025-10-28 15:28

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('users', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='SocialAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('provider', models.CharField(choices=[('google', 'Google'), ('kakao', 'Kakao'), ('naver', 'Naver'), ('apple', 'Apple')], db_index=True, max_length=20, verbose_name='소셜 제공자')),
                ('social_id', models.CharField(db_index=True, help_text='제공자에서 부여한 고유 ID', max_length=255, verbose_name='소셜 ID')),
                ('social_email', models.EmailField(blank=True, help_text='소셜 계정의 원본 이메일', max_length=255, null=True, verbose_name='소셜 이메일')),
                ('social_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='소셜 이름')),
                ('access_token', models.TextField(blank=True, null=True, verbose_name='Access Token')),
                ('refresh_token', models.TextField(blank=True, null=True, verbose_name='Refresh Token')),
                ('token_expires_at', models.DateTimeField(blank=True, null=True, verbose_name='토큰 만료 시간')),
                ('extra_data', models.JSONField(blank=True, default=dict, help_text='제공자별 추가 정보 저장', verbose_name='추가 데이터')),
                ('is_active', models.BooleanField(default=True, verbose_name='활성 상태')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='연결 시간')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='수정 시간')),
                ('last_login_at', models.DateTimeField(blank=True, null=True, verbose_name='마지막 로그인')),
            ],
            options={
                'verbose_name': 'Social Account',
                'verbose_name_plural': 'Social Accounts',
                'db_table': 'social_accounts',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='user',
            name='deleted_at',
            field=models.DateTimeField(blank=True, null=True, verbose_name='삭제 시간'),
        ),
        migrations.AddField(
            model_name='user',
            name='is_deleted',
            field=models.BooleanField(default=False, help_text='소프트 삭제용', verbose_name='삭제 여부'),
        ),
        migrations.AlterField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, related_name='custom_user_set', to='auth.group', verbose_name='그룹'),
        ),
        migrations.AlterField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, related_name='custom_user_set', to='auth.permission', verbose_name='권한'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['email'], name='users_email_4b85f2_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['nickname'], name='users_nicknam_172a64_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['is_deleted', 'created_at'], name='users_is_dele_c068ac_idx'),
        ),
        migrations.AddField(
            model_name='socialaccount',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='social_account', to=settings.AUTH_USER_MODEL, verbose_name='사용자'),
        ),
        migrations.AddIndex(
            model_name='socialaccount',
            index=models.Index(fields=['provider', 'social_id'], name='social_acco_provide_d77442_idx'),
        ),
        migrations.AddIndex(
            model_name='socialaccount',
            index=models.Index(fields=['user', 'is_active'], name='social_acco_user_id_5deb48_idx'),
        ),
        migrations.AddIndex(
            model_name='socialaccount',
            index=models.Index(fields=['social_email'], name='social_acco_social__ef8e38_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='socialaccount',
            unique_together={('provider', 'social_id')},
        ),
    ]
